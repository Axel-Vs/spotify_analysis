# This code generates a graph and deploy it using ggplot.

# We select the top 1 position songs
tops <- 
  spoti_clean %>%
  filter(position == 1) %>% 
  select(track_name) %>% 
  unique() %>% 
  bind_cols(
    colors = rainbow(length(tops))
  ) 
  
# Sum all the objects with the same features
general_data <- 
  spoti_clean %>%  
  group_by(track_name, artist, date, region, year, month) %>% 
  summarise(streams = sum(streams)) %>% 
  ungroup()

# Select the top
top_tracks <- 
  general_data %>% 
  filter(track_name %in% (tops %>% select(track_name) %>% pull())) %>% 
  left_join(tops)

top_positions <- 
  general_data %>% 
  group_by(date) %>% 
  mutate(max = ifelse(max(streams) == streams, 1, 0)) %>% 
  ungroup() %>% 
  filter(max ==1) %>% 
  left_join(tops)

# Plot
top_tracks %>%
  mutate(
    track_name = factor(track_name, levels = tops$track_name)
  ) %>% 
  ggplot(aes(x = date, y = streams, group = colors, color = track_name)) +
  geom_line(alpha = 0.3, show.legend = FALSE, size = 0.6) +
  geom_line(data = top_positions,
            aes(
              x = date,
              y = streams
              ),
            size = 0.9
            ) +
  labs(title = "Top songs in Spotify",
       subtitle = '2017 - 2018') +
  theme(
    axis.title = element_blank(),
    
    axis.text.x = element_text(size = 10, color = "gray20", angle = 0),
    axis.text.y = element_blank(),
    
    axis.ticks.x = element_blank(),
    axis.ticks.y = element_blank(),
    
    panel.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    
    legend.title = element_text(size=10, color = "gray30", face="bold"),
    legend.text = element_text(size=8, color = "gray30", face="bold"),
    legend.justification=c(1,3), 
    #legend.position=c(0.05, 0.95),
    legend.background = element_blank(),
    legend.key = element_blank()
  ) +
  scale_color_manual("Track Name:", 
                    values = tops$colors,
                    labels = tops$track_name)
